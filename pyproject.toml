[tool.poetry]
name = "zug_seegras"
version = "0.0.1"
description = "This is a template repository for a Birds on Mars project."
authors = ["Birds on Mars <info@birdsonmars.com>"]
readme = "README.md"
packages = [
  {include = "zug_seegras"}
]

[tool.poetry.dependencies]
python = ">=3.9.1,<4.0"
python-dotenv = "^1.0.0"
sty = "^1.0.4"
ipykernel = "^6.25.1"
torch = {version = "^2.4.0+cu118", source = "torch118"}
torchvision = {version = "^0.19.0+cu118", source =     "torch118"}
opencv-python = "^4.10.0.84"
torcheval = "^0.0.7"
pytest-cov = "^6.0.0"
tqdm = "^4.67.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pre-commit = "^3.3.3"
ipykernel = "^6.25.1"
black = {extras = ["jupyter"], version = "*"}
ruff = "*"

[[tool.poetry.source]]
name = "torch118"
url = "https://download.pytorch.org/whl/cu118"
priority = "explicit"

[tool.poetry.scripts]
zug_seegras_cli = 'zug_seegras.cli:main'

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py311']
preview = true

[tool.ruff]
target-version = "py311"
line-length = 120
fix = true
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    # Use specific rule codes when ignoring type issues
    "PGH003",
    # shadowing a python builtin
    "A003",
    # Do not perform function calls in argument defaults (used by FastAPI)
    "B008"
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

